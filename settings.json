// Place your settings in this file to overwrite the default settings
{
    // The Language locale to use when spell checking. "en" and "en-GB" are currently supported.
    "cSpell.language": "en-GB",

    // Controls whether syntax highlighting should be copied into the clipboard.
    "editor.copyWithSyntaxHighlighting": false,

    // Controls the font family.
    "editor.fontFamily": "FiraCode-Retina",

    // Configures font ligatures or font features.
    "editor.fontLigatures": true,

    // Controls the font size in pixels.
    "editor.fontSize": 13,

    // Controls how the editor should render whitespace characters.
    //  - none
    //  - boundary: Render whitespace characters except for single spaces between words.
    //  - selection: Render whitespace characters only on selected text.
    //  - all
    "editor.renderWhitespace": "all",

    // Enables tab completions.
    //  - on: Tab complete will insert the best matching suggestion when pressing tab.
    //  - off: Disable tab completions.
    //  - onlySnippets: Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.
    "editor.tabCompletion": "on",

    // Controls auto save of dirty editors. Read more about autosave [here](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save).
    //  - off: A dirty editor is never automatically saved.
    //  - afterDelay: A dirty editor is automatically saved after the configured `files.autoSaveDelay`.
    //  - onFocusChange: A dirty editor is automatically saved when the editor loses focus.
    //  - onWindowChange: A dirty editor is automatically saved when the window loses focus.
    "files.autoSave": "onFocusChange",

    // When enabled, insert a final new line at the end of the file when saving it.
    "files.insertFinalNewline": true,

    // When enabled, will trim trailing whitespace when saving a file.
    "files.trimTrailingWhitespace": true,

    // Enables commit signing with GPG.
    "git.enableCommitSigning": true,

    // Include unimported packages in auto-complete suggestions.
    "go.autocompleteUnimportedPackages": true,

    // Use the Go language server "gopls" from Google for powering language features like code navigation, completion, formatting & diagnostics.
    "go.useLanguageServer": true,

    // Disable sending anonymous usage statistics
    "sonarlint.disableTelemetry": true,

    // Enable crash reports to be sent to a Microsoft online service.
    // This option requires restart to take effect.
    "telemetry.enableCrashReporter": false,

    // Enable usage data and errors to be sent to a Microsoft online service.
    "telemetry.enableTelemetry": false,

    // Customizes which terminal application to run on macOS.
    "terminal.external.osxExec": "iTerm.app",

    // Controls the font size in pixels of the terminal.
    "terminal.integrated.fontSize": 13,

    // Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.
    "typescript.surveys.enabled": false,

    // Enables macOS Sierra window tabs. Note that changes require a full restart to apply and that native tabs will disable a custom title bar style if configured.
    "window.nativeTabs": true,

    // Controls whether folders should open in a new window or replace the last active window.
    // Note that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).
    //  - on: Folders will open in a new window.
    //  - off: Folders will replace the last active window.
    //  - default: Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu).
    "window.openFoldersInNewWindow": "on",

    // Fetches experiments to run from a Microsoft online service.
    "workbench.enableExperiments": false,

    // Determines which settings editor to use by default.
    //  - ui: Use the settings UI editor.
    //  - json: Use the JSON file editor.
    "workbench.settings.editor": "json",

    // Controls whether opening settings also opens an editor showing all default settings.
    "workbench.settings.openDefaultSettings": true,

    // Controls whether to use the split JSON editor when editing settings as JSON.
    "workbench.settings.useSplitJSON": true,

    // Controls which editor is shown at startup, if none are restored from the previous session.
    //  - none: Start without an editor.
    //  - welcomePage: Open the Welcome page (default).
    //  - readme: Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise.
    //  - newUntitledFile: Open a new untitled file (only applies when opening an empty workspace).
    //  - welcomePageInEmptyWorkbench: Open the Welcome page when opening an empty workbench.
    "workbench.startupEditor": "newUntitledFile",

    "[json]": {
      "editor.defaultFormatter": "vscode.json-language-features"
    },

    "[javascript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    },

    "[typescript]": {
      "editor.defaultFormatter": "vscode.typescript-language-features"
    }
}
